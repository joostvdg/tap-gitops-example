apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: dotnet
spec:
  params:
    - name: DOTNET_IMAGE
      type: string
      description: Dotnet base image
      default: mcr.microsoft.com/dotnet/sdk:6.0
  workspaces:
    - name: source
      description: Workspace where we expect the source code to exist.
  steps:
    - name: nuget-config
      image: $(params.DOTNET_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        echo "Creating Nuget Config"
        echo '<?xml version="1.0" encoding="utf-8"?><configuration><packageSources><add key="Proxy" value="https://nexus.services.mydomain.com/repository/nuget.org-proxy/index.json" /></packageSources></configuration>'  > NuGet.Config
        echo "Create cert"
        echo "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3akNDQXRhZ0F3SUJBZ0lVUnY1RHpYU0RrbEVSRnU0Z0wyc1FCTmVSZytvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2dZNHhDekFKQmdOVkJBWVRBazVNTVJnd0ZnWURWUVFJRXc5VWFHVWdUbVYwYUdWeWJHRnVaSE14RURBTwpCZ05WQkFjVEIxVjBjbVZqYUhReEZUQVRCZ05WQkFvVERFdGxZWEp2Y3lCVVlXNTZkVEVkTUJzR0ExVUVDeE1VClMyVmhjbTl6SUZSaGJucDFJRkp2YjNRZ1EwRXhIVEFiQmdOVkJBTVRGRXRsWVhKdmN5QlVZVzU2ZFNCU2IyOTAKSUVOQk1CNFhEVEl5TURNeU16RTFNelV3TUZvWERUSTNNRE15TWpFMU16VXdNRm93Z1k0eEN6QUpCZ05WQkFZVApBazVNTVJnd0ZnWURWUVFJRXc5VWFHVWdUbVYwYUdWeWJHRnVaSE14RURBT0JnTlZCQWNUQjFWMGNtVmphSFF4CkZUQVRCZ05WQkFvVERFdGxZWEp2Y3lCVVlXNTZkVEVkTUJzR0ExVUVDeE1VUzJWaGNtOXpJRlJoYm5wMUlGSnYKYjNRZ1EwRXhIVEFiQmdOVkJBTVRGRXRsWVhKdmN5QlVZVzU2ZFNCU2IyOTBJRU5CTUlJQklqQU5CZ2txaGtpRwo5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeVpYREw5VzJ2dTM2NW0vL0UvdzhuMU0xODlhNW1JOUhjVFlhCjB4WmhudXA1OFpwNzJQc2d6dWpJL2ZRZTQzSkVlQythSU9jbXNvRGFRL3VxUmk4cDhwaFU1L3BveEtDYmU5U00KZjFPZmxMRDlrMmR3dGU2T1Y1a2NTVWJWT2dTY0tMMXdHRW81bWRPaVRGckVwNWFMQlVjYlVlSk1ZejJJcUxWYQp2NTJIMHZUekdmbXJmU20vUFFiKzVxbkNFNUQ4OERSRXFLdFdkV1cyYkNXMEhoeFZIazZYWC9GS0QyWjBGSFdJCkNoZWplYWlhclhxV0JJOTRCQU5iT0FPbWxoamp5SmVrVDVoTDFnaDdCdUNMYmlFK0E1M2tXblhPNlhiL2V5dUoKb2JyK3VITEpsZG9KcTdTRnl2eHJEZC84TEFKRDRYTUNFeiszZ1dqWURYTUg3R2ZQV3dJREFRQUJvMEl3UURBTwpCZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVWZHVTUwUGU5CllUdjVTRnZHVk96NlI3ZGRQY1V3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUhNb05EeHk5L2tMNG5XMEJoYzUKR24wbUQ4eHF0K3FwTEdnQ2hsc01QTlIweFBXMDRZRG90bStHbVpIWmcxdDZ2RThXUEtza3RjdXY3NmQraFg0QQp1aFhYR1M5RDBGZUM2STZqNmRPSVc3U2JkM2lBUVFvcHdJQ1lGTDlFRkErUUFJTmVZL1k5OUxmM0IxMUpmTFU4CmpOOXVHSEtGSTBGVndIWDQyOE9iVnJEaTMrT0NOZXdRM2ZMbXJSUWU2RjZxMk9VODk5aHVDZytlWUVDV3Z4WlIKYTNTbFZabVluZWZiQTg3akkyRlJIVVBxeHA0UDJtRHdqL1JaeGhnSW9iaHcwenowOHNxQzZEVzBBajFPSUplNQpzREFtMHVpVWRxczdGWk4ydUtrTEtla2RUZ1cwUWtURkVKVGs1WWs5dC9oT3JqbkhvV1FmQittTGhPM3ZQaGlwCnZocz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=" | base64 -d > ca.crt
        export SSL_CERT_FILE=$(pwd)/ca.crt
        echo "Trust https://nexus.services.mydomain.com/repository/nuget.org-proxy/index.json"
        dotnet nuget trust source Proxy --source-url https://nexus.services.mydomain.com/repository/nuget.org-proxy/index.json

    - name: nuget-restore
      image: $(params.DOTNET_IMAGE)
      workingDir: $(workspaces.source.path)
      volumeMounts:
      - name: nuget-packages
        mountPath: /tmp/packages
      - name: http-cache
        mountPath: /tmp/http_cache
      - name: nuget-scratch
        mountPath: /tmp/scratch
      - name: plugin-cache
        mountPath: /tmp/plugin_cache
      env:
      - name: NUGET_PACKAGES
        value: /tmp/packages
      - name: NUGET_HTTP_CACHE_PATH
        value: /tmp/http_cache
      - name: NUGET_SCRATCH
        value: /tmp/scratch
      - name: NUGET_PLUGINS_CACHE_PATH
        value: plugin-cache
      script: |
        #!/usr/bin/env bash
        echo "Restoring NuGet packages"
        export SSL_CERT_FILE=$(pwd)/ca.crt
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0 dotnet restore -v n

    - name: dotnet-build
      image: $(params.DOTNET_IMAGE)
      workingDir: $(workspaces.source.path)
      volumeMounts:
      - name: nuget-packages
        mountPath: /tmp/packages
      - name: http-cache
        mountPath: /tmp/http_cache
      - name: nuget-scratch
        mountPath: /tmp/scratch
      - name: plugin-cache
        mountPath: /tmp/plugin_cache
      env:
      - name: NUGET_PACKAGES
        value: /tmp/packages
      - name: NUGET_HTTP_CACHE_PATH
        value: /tmp/http_cache
      - name: NUGET_SCRATCH
        value: /tmp/scratch
      - name: NUGET_PLUGINS_CACHE_PATH
        value: plugin-cache
      script: |
        #!/usr/bin/env bash
        echo "Doing DotNet Release Build"
        export SSL_CERT_FILE=$(pwd)/ca.crt
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0 dotnet build --no-restore --configuration Release --runtime linux-x64 --self-contained

    - name: nuget-test
      image: $(params.DOTNET_IMAGE)
      workingDir: $(workspaces.source.path)
      volumeMounts:
      - name: nuget-packages
        mountPath: /tmp/packages
      - name: http-cache
        mountPath: /tmp/http_cache
      - name: nuget-scratch
        mountPath: /tmp/scratch
      - name: plugin-cache
        mountPath: /tmp/plugin_cache
      env:
      - name: NUGET_PACKAGES
        value: /tmp/packages
      - name: NUGET_HTTP_CACHE_PATH
        value: /tmp/http_cache
      - name: NUGET_SCRATCH
        value: /tmp/scratch
      - name: NUGET_PLUGINS_CACHE_PATH
        value: plugin-cache
      script: |
        #!/usr/bin/env bash
        echo "Running DotNet test"
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0 dotnet test --logger:trx

    - name: nuget-publish
      image: $(params.DOTNET_IMAGE)
      workingDir: $(workspaces.source.path)
      volumeMounts:
      - name: nuget-packages
        mountPath: /tmp/packages
      - name: http-cache
        mountPath: /tmp/http_cache
      - name: nuget-scratch
        mountPath: /tmp/scratch
      - name: plugin-cache
        mountPath: /tmp/plugin_cache
      env:
      - name: NUGET_PACKAGES
        value: /tmp/packages
      - name: NUGET_HTTP_CACHE_PATH
        value: /tmp/http_cache
      - name: NUGET_SCRATCH
        value: /tmp/scratch
      - name: NUGET_PLUGINS_CACHE_PATH
        value: plugin-cache
      script: |
        #!/usr/bin/env bash
        echo "Doing DotNet Release Publish"
        export SSL_CERT_FILE=$(pwd)/ca.crt
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0 dotnet publish --no-restore --configuration Release --runtime linux-x64 --output=. --self-contained

  volumes:
  - name: nuget-packages
    emptyDir: {}
  - name: http-cache
    emptyDir: {}
  - name: nuget-scratch
    emptyDir: {}
  - name: plugin-cache
    emptyDir: {}
